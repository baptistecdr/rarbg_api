name: Rust-CI-CD

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
        name: Clone Repository
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        name: Get Rust Toolchain
        with:
          toolchain: stable
      - name: Check Code Style
        run: cargo fmt --verbose
      - name: Run Linter
        run: cargo clippy --verbose
      - name: Build
        run: cargo build --verbose
      - name: Test
        run: cargo test --verbose
  release:
    needs: build_and_test
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'Release v')
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
        name: Clone Repository
      - name: Get Release Version
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          VERSION=$(echo $COMMIT_MESSAGE | grep -Po 'v\d+\.\d+\.\d+')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        id: version
      - uses: rickstaa/action-create-tag@87a112438ed8b80a2ae25dcf8f11d4949dc4f740 # v1
        name: Create Tag
        with:
          tag: ${{ steps.version.outputs.VERSION }}
          message: ${{ github.event.head_commit.message }}
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        name: Get Rust Toolchain
        with:
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@04c00a4beebff1741361a108e578296cb52ae085 # tag=v1
        name: Publish to Crates.io
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
